import { Directive, Input, TemplateRef, ViewContainerRef } from "@angular/core";

// https://angular.io/guide/structural-directives#writing-structural-directives
// The UnlessDirective creates an embedded view from the Angular-generated <ng-template>
// and inserts that view in a view container adjacent to the host element (where the directive is placed).
@Directive({
  selector: '[appUnless]'
})
export class UnlessDirective {
 /*
  https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/set
  Set binds an object property to a function to be called when there is an attempt to set that property.
  A setter is used to execute a function whenever a specified property is attempeted to be changed.
 */
 @Input() set appUnless(condition: boolean) {
  // Does the opposite of ngIf: shows something if a condition is not true.
  if (!condition) {
    // Creates a view in the view container. The view is the templateRef.
    this.vcRef.createEmbeddedView(this.templateRef);
  } else {
    // Remove everything from the DOM.
    this.vcRef.clear();
  }
 }

 /*
  What happens in the constructor:
  Get access to the template (the 'what', i.e. the ng-template that is created by Angular)
  and the place in the document where you want to render it (the 'where', i.e. where should it be rendered).
  Inject them in constructor of the directive. They both point to the element where the directive is placed.
  vcRef marks the spot where we place the directive in the template (e.g. in faves.component.html on app-list).

  - TemplateRef helps you get the <ng-template> (generated by Angular when you use structural directive) contents.
    Similar to ElementRef, which gives you access to the element the directive is placed on.
    "Embed my content somewhere".
    It represents an embedded template that can be used to instantiate embedded views.
    When the directive is used somewhere in the HTML, TemplateRef  points to the surrounding template element
  - ViewContainerRef accesses the view container and marks the position after which new content may be inserted.
    ViewContainerRef points to the place where the content will be rendered, i.e. the place where
    the under-the-hood generated ng-template will be rendered.

  https://angular.io/api/core/ViewContainerRef#description
  ViewContainerRef represents a container where views can be attached to a component.
  Can contain embedded views (created by instantiating a TemplateRef with the createEmbeddedView method).
  Embedded view = an Angular view in view container.

  https://angular.io/guide/glossary#view-hierarchy
 */
 constructor(private templateRef: TemplateRef<any>, private vcRef: ViewContainerRef) {}
}
